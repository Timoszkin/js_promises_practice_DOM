{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","createmessage","message","type","messageAlert","createElement","classList","add","setAttribute","textContent","insertAdjacentElement","promise1","Promise","resolve","reject","addEventListener","e","setTimeout","Error","then","catch","promise2","button","promise3","firstCondition","secondCondition"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAEpC,SAASC,EAAcC,EAASC,GACxBC,IAAAA,EAAeL,SAASM,cAAc,OAE5CD,EAAaE,UAAUC,IAAOJ,GAAAA,OAAAA,IAC9BC,EAAaI,aAAa,UAAW,gBACrCJ,EAAaK,YAAcP,EAC3BJ,EAAKY,sBAAsB,YAAaN,GAG1C,IAAMO,EAAW,IAAIC,QAAQ,SAACC,EAASC,GACrChB,EAAKiB,iBAAiB,QAAS,SAACC,GAC9BH,EAAA,gCAGFI,WAAW,WACTH,EAAOI,QACN,OAGLP,EAASQ,KAAK,SAAAjB,GACZD,EAAcC,EAAS,aAGzBS,EAASS,MAAM,WACbnB,EAA4C,6BAAA,aAG9C,IAAMoB,EAAW,IAAIT,QAAQ,SAACC,GAC5Bf,EAAKiB,iBAAiB,YAAa,SAACC,GACjB,IAAbA,EAAEM,QAA6B,IAAbN,EAAEM,QACtBT,EAAA,mCAKNQ,EAASF,KAAK,SAAAjB,GACZD,EAAcC,EAAS,aAGzB,IAAMqB,EAAW,IAAIX,QAAQ,SAACC,GACxBW,IAAAA,GAAiB,EACjBC,GAAkB,EAEtB3B,EAAKiB,iBAAiB,YAAa,SAACC,GACjB,IAAbA,EAAEM,SACJE,GAAiB,GAGF,IAAbR,EAAEM,SACJG,GAAkB,IAGG,IAAnBD,IAA+C,IAApBC,GAC7BZ,EAAA,kCAKNU,EAASJ,KAAK,SAAAjB,GACZD,EAAcC,EAAS","file":"main.f7931119.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\n\nfunction createmessage(message, type) {\n  const messageAlert = document.createElement('div');\n\n  messageAlert.classList.add(`${type}`);\n  messageAlert.setAttribute('data-qa', 'notification');\n  messageAlert.textContent = message;\n  body.insertAdjacentElement('beforeend', messageAlert);\n}\n\nconst promise1 = new Promise((resolve, reject) => {\n  body.addEventListener('click', (e) => {\n    resolve(`First promise was resolved`);\n  });\n\n  setTimeout(() => {\n    reject(Error);\n  }, 3000);\n});\n\npromise1.then(message => {\n  createmessage(message, 'success');\n});\n\npromise1.catch(() => {\n  createmessage(`First promise was rejected`, 'warning');\n});\n\nconst promise2 = new Promise((resolve) => {\n  body.addEventListener('mousedown', (e) => {\n    if (e.button === 0 || e.button === 2) {\n      resolve(`Second promise was resolved`);\n    };\n  });\n});\n\npromise2.then(message => {\n  createmessage(message, 'success');\n});\n\nconst promise3 = new Promise((resolve) => {\n  let firstCondition = false;\n  let secondCondition = false;\n\n  body.addEventListener('mousedown', (e) => {\n    if (e.button === 0) {\n      firstCondition = true;\n    };\n\n    if (e.button === 2) {\n      secondCondition = true;\n    };\n\n    if (firstCondition === true && secondCondition === true) {\n      resolve(`Third promise was resolved`);\n    };\n  });\n});\n\npromise3.then(message => {\n  createmessage(message, 'success');\n});\n"]}